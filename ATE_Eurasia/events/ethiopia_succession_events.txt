namespace = EL

### Stuff that should probably be handled upon new dynasty for the emperor ###
#- new policy?
#- new status?
#- Western Protectorate ruler change?
#- Title (of Ethiopia) name change
#- Policy change infrastructure (ended up being another file)
#- Handle tributaries
#- Handle grace values
#- Handle agreements? (Non-agression pacts break)
# on_offmap_ruler_changed: An offmap power changes its ruler. Triggers for the new ruler
# Root = New ruler
# From = Old ruler
# FromFrom = Offmap

#In case of dynasty change...  (fired from om_action: on_offmap_ruler_changed)
character_event = {
    id = EL.10005
    hide_window = yes

    has_dlc = "Jade Dragon"

    is_triggered_only = yes
    offmap = only #alternative would be "offmap = allow" (but that'd *include* them, not be *only* for them)

    trigger = {
        is_offmap_tag = offmap_ethiopia
    	NOT = { dynasty = FROM }
    }

    immediate = {
        if = {
            limit = {
                NOT = {
                    any_player = {
                        dynasty = ROOT
                    }
                }
            }
            clr_offmap_flag = ethiopia_invaded_player_dynasty
        }

    	#Sack the current northern governor or not...
    	random_list = {
    		10 = {
    			modifier = {
    			 	factor = 10
			 		OR = {
    			 		AND = {
    			 			culture = somali
	    			 		governor = {
	    			 			NOT = { culture = somali }
	    			 		}
	    			 	}
	    			 	AND = {
    			 			culture = tigre
	    			 		governor = {
	    			 			NOT = { culture = tigre }
	    			 		}
	    			 	}
			 		}
    			}
    			modifier = {
    				factor = 1.5
    				has_status = ethiopia_civil_war
    			}
    			modifier = {
    				factor = 0.5
    				has_status = ethiopia_stable
    			}
                governor = {
                	trigger_switch = {
                		on_trigger = has_character_flag
                		spawning_a_displaced_royal = {
							offmap_ethiopia = {
								set_offmap_flag = waiting_to_spawn_a_displaced_royal
							}
                		}
                		spawning_a_jurchen_invader = {
							offmap_ethiopia = {
								set_offmap_flag = waiting_to_spawn_a_tigre_invader
							}
                		}
                		spawning_a_rebel_general = {
							offmap_ethiopia = {
								set_offmap_flag = waiting_to_spawn_a_rebel_general
							}
                		}
                	}
                    death = { death_reason = death_went_back_to_ethiopia }
                }
    		}
    		10 = {
    			trigger = {
					offmap_ethiopia = {
						NOT = { has_offmap_tmp_flag = ethiopia_invaded_player_dynasty }
					}
				}
			}
    	}

        #Break peace deal
        any_playable_ruler = {
            limit = {
				has_character_modifier = peace_deal_wtih_ethiopia
				OR = {
					ai = yes
					NOT = { has_offmap_news_enabled = FROMFROM }
					NOT = { is_within_diplo_range = ROOT }
				}
			}
            remove_character_modifier = peace_deal_wtih_ethiopia
        }

        #Reset Cooldowns
        any_playable_ruler = {
            limit = {
                OR = {
                    has_character_modifier = ethiopian_grace_send_gift_timer
                    has_character_modifier = ethiopian_grace_send_eunuch_timer
                    has_character_modifier = ethiopian_grace_send_concubine_timer
                    has_character_modifier = ethiopian_grace_tributary_timer
                    has_character_modifier = jd_ethiopia_boon_cd
                    has_character_modifier = ethiopia_force_open_cooldown
                    has_character_modifier = angered_ethiopia_modifier
                    has_character_modifier = ethiopian_imperial_trade_contract
					has_character_modifier = ethiopia_raid_grace_cd
                }
            }
            remove_character_modifier = ethiopian_grace_send_gift_timer
            remove_character_modifier = ethiopian_grace_send_eunuch_timer
            remove_character_modifier = ethiopian_grace_send_concubine_timer
            remove_character_modifier = ethiopian_grace_tributary_timer
            remove_character_modifier = jd_ethiopia_boon_cd
            remove_character_modifier = ethiopia_force_open_cooldown
            remove_character_modifier = angered_ethiopia_modifier
            remove_character_modifier = ethiopian_imperial_trade_contract
			remove_character_modifier = ethiopia_raid_grace_cd
        }

    	#Handle tributaries...
        governor = {
            any_tributary = {
                limit = { is_tributary = { type = offmap } }
                remove_tributary = PREV
                set_character_flag = was_tributary_of_ethiopia #for new dynasty notification event
            }
        }
		
		#Handle Kowtow trait
	#	any_playable_ruler = {
    #       limit = {
    #           OR = {
    #               trait = kow_tow_completed_tier_1
    #               trait = kow_tow_completed_tier_2
    #               trait = kow_tow_completed_tier_3
    #           }
    #       }
    #       remove_trait = kow_tow_completed_tier_1
    #       remove_trait = kow_tow_completed_tier_2
    #       remove_trait = kow_tow_completed_tier_3
	#		clr_character_flag = went_on_kow_tow_pilgrimage
    #   }
    }
}

character_event = {
	id = EL.31000
	hide_window = yes
	
	is_triggered_only = yes
	offmap = only
	
	immediate = {
		if = {
			limit = {
				FROMFROM = {
					is_offmap_tag = offmap_ethiopia
				}
			}
            log = "-------------------------------------"
            log = "Ethiopia Logging:"
			log = "Ethiopian succession - New Culture: [Root.Culture.GetName]"
			log = "Ethiopian succession - Old Culture: [From.Culture.GetName]"
			log = "Ethiopian succession - New Religion: [Root.Religion.GetName]"
			log = "Ethiopian succession - Old Religion: [From.Religion.GetName]"
			log = "Ethiopian succession - New Dynasty: [Root.GetOnlyDynastyName]"
			log = "Ethiopian succession - Old Dynasty: [From.GetOnlyDynastyName]"
            log = "-------------------------------------"
		}
	}
}